name: Doxygen
on: workflow_dispatch
permissions:
  contents: read

jobs:
  doxygen:
    name: Build Doxygen Docs
    runs-on: ubuntu-latest
    env:
      TOOL_DIR: "${{ github.workspace }}/doxygen-bin"
      VERSION: 1.9.7

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          submodules: 'True'

      - name: Install GraphViz
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Cache the Doxygen binary
        id: cache-binary
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          key: 'doxygen-${{ runner.os }}-${{ env.VERSION }}'
          path: '${{ env.TOOL_DIR }}/doxygen.tgz'

      - name: Download Doxygen binary
        if: ${{ steps.cache-binary.outputs.cache-hit != 'true' }}
        run: |
          echo ${{ steps.cache-binary.outputs.cache-hit }}
          mkdir -p "${{ env.TOOL_DIR }}"
          curl \
            --location \
            --output "${{ env.TOOL_DIR }}/doxygen.tgz" \
            "https://www.doxygen.nl/files/doxygen-${{ env.VERSION }}.linux.bin.tar.gz"

      - name: Unpack Doxygen binary
        run: |
          cd "${{ env.TOOL_DIR }}"
          tar xzf doxygen.tgz
          ls

      - name: Run Doxygen
        run: |
          "${{ env.TOOL_DIR }}/doxygen-${{ env.VERSION }}/bin/doxygen"

      - name: Compress Documentation Directory
        run: |
          tar czf ./docs.tgz docs

      - name: Upload Documentation
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: docs
          path: ./docs.tgz
