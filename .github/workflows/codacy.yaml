name: Codacy Clang-Tidy
on:
  push:
    branches:
      - main
      - v2
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  tidy:
    name: Tidy
    runs-on: ubuntu-22.04
    env:
      CLANG_VERSION: 15
      CCT_VERSION: 1.3.2
      CCT: codacy-clang-tidy-linux-1.3.2
      CODACY_URL: https://api.codacy.com
      # The path for clang-tidy output.
      CLANG_TIDY_OUT: /tmp/clang-tidy-out
      # The path for codacy-clang-tidy output.
      CCT_OUT: /tmp/cct-out

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'True'

      - name: Apt update
      - run: |
          sudo apt-get update
          sudo apt-get upgrade -y

      - name: Install clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          # Force --yes to the end of the add-apt-repository command to
          # avoid the llvm.sh hanging.
          sed -ie "/^add-apt-repository/ s/$/ --yes/" llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{ env.CLANG_VERSION }} all

      - name: Download the codacy-clang-tidy tool
        env:
          CCT_DOWNLOAD_URL: https://github.com/codacy/codacy-clang-tidy/releases/download/${{ env.CCT_VERSION }}/${{ env.CCT }}
        run: |
          mkdir -p "$HOME/cct"
          curl -L "${{ env.CCT_DOWNLOAD_URL }}" -o "$HOME/cct/${{ env.CCT }}"
          chmod +x "$HOME/cct/${{ env.CCT }}"

      - name: Install Dependencies
        run: |
          sudo apt-get install -y cmake ninja-build

      - name: Configure
        run: |
          rm -f -r ./build
          cmake -S .                                                   \
                -B ./build                                             \
                -G Ninja                                               \
                -D CMAKE_EXPORT_COMPILE_COMMANDS=Yes                   \
                -D CMAKE_BUILD_TYPE=Release                            \
                -D CMAKE_C_COMPILER=clang-${{ env.CLANG_VERSION }}     \
                -D CMAKE_CXX_COMPILER=clang++-${{ env.CLANG_VERSION }}

      # TODO: remove this step once the cprun.?pp files are committed
      # rather than generated at build-time.
      - name: Build
        shell: bash
        run: cmake --build ./build --config Release

      - name: Run clang-tidy
        run: |
          SRC=$(find . -name "*.?pp"              \
                     -not -path "./build*/*"      \
                     -not -path "./systemtests/*" \
               )
          clang-tidy-${{ env.CLANG_VERSION }} \
            -p=./build/compile_commands.json   \
            $SRC                               \
            --                                 \
            -std=c++20                         \
            -I ./include                       \
            -I ./googletest/googletest/include \
            -I ./googletest/googlemock/include \
            -D NDEBUG                          \
          | tee "${{ env.CLANG_TIDY_OUT }}"

      # Convert the clang-tidy output to a format that the Codacy API accepts
      - name: Run codacy-clang-tidy
        run: |
          "$HOME/cct/${{ env.CCT }}" < "${{ env.CLANG_TIDY_OUT }}" > "${{ env.CCT_OUT }}"

      - name: Upload to the Codacy server
        run: |
          COMMIT=$(git rev-parse HEAD)
          # Send the results to Codacy
          curl -XPOST                                                  \
               -L                                                      \
               -H "project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}" \
               -H "Content-type: application/json"                     \
               -d "@${{ env.CCT_OUT }}"                                \
               "${{ env.CODACY_URL }}/2.0/commit/${COMMIT}/issuesRemoteResults"
          # Signal that Codacy can use the sent results and start a new analysis
          curl -XPOST                                                  \
               -L                                                      \
               -H "project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}" \
               -H "Content-type: application/json"                     \
               "${{ env.CODACY_URL }}/2.0/commit/${COMMIT}/resultsFinal"
