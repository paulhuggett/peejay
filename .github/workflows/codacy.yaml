name: Codacy Clang-Tidy
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  contents: read

jobs:
  codacy:
    name: clang-tidy to Codacy
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: build_clangtidy
      CCT_VERSION: 1.3.8
      CCT: codacy-clang-tidy-linux
      CODACY_URL: https://api.codacy.com
      # The path for clang-tidy output.
      CLANG_TIDY_OUT: /tmp/clang-tidy-out
      CLANG_VERSION: 18
      # The path for codacy-clang-tidy output.
      CCT_OUT: /tmp/cct-out

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: True

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Install Dependencies (LLVM)
        uses: paulhuggett/install-llvm@ad897b4b1cf03f54c1218ec6d97a23ff4b10b870 # v1.0
        with:
          version: ${{ env.CLANG_VERSION }}
          all: true

      - name: Download the codacy-clang-tidy tool
        env:
          CCT_DOWNLOAD_URL: https://github.com/codacy/codacy-clang-tidy/releases/download/${{ env.CCT_VERSION }}/${{ env.CCT }}-${{ env.CCT_VERSION }}
        run: |
          mkdir -p "$HOME/cct"
          curl -L "${CCT_DOWNLOAD_URL}" -o "$HOME/cct/${CCT}-${CCT_VERSION}"
          chmod +x "$HOME/cct/${CCT}-${CCT_VERSION}"

      - name: Configure
        run: |
          rm -f -r "$BUILD"
          cmake                                            \
            -S .                                           \
            -B "$BUILD_DIR"                                \
            -D CMAKE_BUILD_TYPE=Release                    \
            -D "CMAKE_CXX_COMPILER=clang++-$CLANG_VERSION" \
            -D "CMAKE_C_COMPILER=clang-$CLANG_VERSION"     \
            -D CMAKE_EXPORT_COMPILE_COMMANDS=Yes

      - name: Run clang-tidy
        run: |
          find . -name \*.\?pp -not -path "$BUILD_DIR*/*" -not -path ./klee/\* -not -path ./systemtests/\* -print0 | \
          xargs -0 "clang-tidy-$CLANG_VERSION" "-p=$BUILD_DIR/compile_commands.json" | \
          tee -a "${{ env.CLANG_TIDY_OUT }}"

      # Convert the clang-tidy output to a format that the Codacy API accepts
      - name: Run codacy-clang-tidy
        run: |
          "$HOME/cct/${CCT}-${CCT_VERSION}" < "$CLANG_TIDY_OUT" > "$CCT_OUT"

      - name: Upload to the Codacy server
        run: |
          COMMIT="$(git rev-parse HEAD)"
          # Send the results to Codacy
          curl                                                      \
            -XPOST                                                  \
            -L                                                      \
            -H "project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}" \
            -H "Content-type: application/json"                     \
            -d "@$CCT_OUT"                                          \
            "$CODACY_URL/2.0/commit/$COMMIT/issuesRemoteResults"
          # Signal that Codacy can use the sent results and start a new analysis
          curl                                                      \
            -XPOST                                                  \
            -L                                                      \
            -H "project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}" \
            -H "Content-type: application/json"                     \
            "$CODACY_URL/2.0/commit/$COMMIT/resultsFinal"
