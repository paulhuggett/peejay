# Some of the these steps are probably unnecessary on the GitHub runners.
# However, I'd like to be able to use the 'act' <https://github.com/nektos/act>
# tool to run the action locally.
#
# Instructions for using the Kitware APT repository were found at
# <https://apt.kitware.com>

name: KLEE Test
on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  klee:
    runs-on: ubuntu-latest

    container:
      image: klee/klee:3.0
      options: -u 0 --ulimit="stack=-1:-1"

    steps:
      - name: Get the Kitware APT repository signing key
        run: |
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null

      - name: Add Kitware repository
        run: |
          CODENAME=$(lsb_release -c | sed -n -e 's/Codename:[[:space:]]*//gp')
          echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $CODENAME main" | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null

      - name: Apt Update
        run: sudo apt-get update

      - name: Install NodeJS 20
        run: |
          set -o xtrace
          sudo apt-get install -y nodejs

      - name: Install the kitware-archive-keyring package
        run: |
          sudo rm /usr/share/keyrings/kitware-archive-keyring.gpg
          sudo apt-get install -y kitware-archive-keyring

      - name: Install cmake, Ninja, & libc++
        run: |
          sudo apt-get install -y cmake ninja-build
          sudo apt-get install -y libc++-13-dev libc++abi-13-dev

      - name: Upgrade git
        run: |
          sudo add-apt-repository -y ppa:git-core/ppa
          sudo apt-get install -y git

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: 'True'

      - name: Create the Build Environment
        run: cmake -E make_directory "${{ github.workspace }}/build"

      - name: Configure
        run: |
          cmake -G Ninja                       \
            -B "${{ github.workspace }}/build" \
            -S "$GITHUB_WORKSPACE"             \
            -D CMAKE_BUILD_TYPE=Release        \
            -D CMAKE_CXX_COMPILER=clang++      \
            -D CMAKE_C_COMPILER=clang          \
            -D WERROR=Yes

      - name: KLEE Build
        run: cmake --build "${{ github.workspace }}/build" --target klee-build-all

      - name: KLEE Test
        run: cmake --build "${{ github.workspace }}/build" --target klee-all

      - name: Compress Test Outputs
        run: |
          tar czf ./kout.tgz "${{ github.workspace }}/build/klee/kout"

      - name: Upload Test Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: kout.tgz
          path: ./kout.tgz
